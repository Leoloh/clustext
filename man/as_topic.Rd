% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_topic.R
\name{as_topic}
\alias{as_topic}
\alias{as_topic.get_terms}
\title{Convert \code{get_terms} to Topics}
\usage{
as_topic(x, max.n = 8, sort = TRUE, ...)

\method{as_topic}{get_terms}(x, max.n = 8, sort = TRUE, ...)
}
\arguments{
\item{x}{A \code{get_terms} object.}

\item{max.n}{The max number of words to show before truncation.}

\item{sort}{logical.  If \code{TRUE} the cluster topics are sorted by size
(number of documents) otherwise the topics are sorted by cluster number.}

\item{\ldots}{ignored.}
}
\value{
Returns a \code{\link[base]{data.frame}} of \code{"cluster"},
\code{"count"}, and \code{"terms"}.  Pretty prints as clusters, number of
documents, and associated important terms.
}
\description{
View important terms as a comma separated string (a topic).
}
\examples{
library(dplyr)

myfit5 <- presidential_debates_2012 \%>\%
    mutate(tot = gsub("\\\\..+$", "", tot)) \%>\%
    textshape::combine() \%>\%
    filter(person \%in\% c("ROMNEY", "OBAMA")) \%>\%
    with(data_store(dialogue, stopwords = tm::stopwords("english"), min.char = 3)) \%>\%
    hierarchical_cluster()

ca5 <- assign_cluster(myfit5, k = 50)

get_terms(ca5, .4) \%>\%
    as_topic()

get_terms(ca5, .4) \%>\%
    as_topic(sort=FALSE)

get_terms(ca5, .95) \%>\%
    as_topic()
}

