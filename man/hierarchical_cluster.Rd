% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hierarchical_cluster.R
\name{hierarchical_cluster}
\alias{hierarchical_cluster}
\alias{hierarchical_cluster.data_store}
\title{Fit a Hierarchical Cluster}
\usage{
hierarchical_cluster(x, distance = "cosine", method = "ward.D2", ...)

\method{hierarchical_cluster}{data_store}(x, distance = "cosine",
  method = "ward.D", ...)
}
\arguments{
\item{x}{A data store object (see \code{\link[clustext]{data_store}}).}

\item{distance}{A distance measure ("cosine" or "jaccard").}

\item{method}{The agglomeration method to be used. This must be (an
unambiguous abbreviation of) one of \code{"single"}, \code{"complete"},
\code{"average"}, \code{"mcquitty"}, \code{"ward.D"}, \code{"ward.D2"},
\code{"centroid"}, or \code{"median"}.}

\item{\ldots}{ignored.}
}
\value{
Returns an object of class \code{"hclust"}.
}
\description{
Fit a hierarchical cluster to text data.  Prior to distance measures being
calculated the tf-idf (see \code{\link[tm]{weightTfIdf}}) is applied to the
\code{\link[tm]{DocumentTermMatrix}}.  Cosine dissimilarity is used to generate
the distance matrix supplied to \code{\link[fastcluster]{hclust}}.  \code{method}
defaults to \code{"ward.D2"}.  A faster cosine dissimilarity calculation is used
under the hood (see \code{\link[clustext]{cosine_distance}}).  Additionally,
\code{\link[fastcluster]{hclust}} is used to quickly calculate the fit.
Essentially, this is a wrapper function optimized for clustering text data.
}
\examples{
library(dplyr)

x <- with(
    presidential_debates_2012,
    data_store(dialogue, paste(person, time, sep = "_"))
)

hierarchical_cluster(x) \%>\%
    plot(k=4)

hierarchical_cluster(x) \%>\%
    plot(h=.7, lwd=2)

hierarchical_cluster(x) \%>\%
    assign_cluster(h=.7)

\dontrun{
## interactive cutting
hierarchical_cluster(x) \%>\%
    plot(h=TRUE)
}

hierarchical_cluster(x, method="complete") \%>\%
    plot(k=6)

hierarchical_cluster(x) \%>\%
    assign_cluster(k=6)

x2 <- presidential_debates_2012 \%>\%
    with(data_store(dialogue))

myfit2 <- hierarchical_cluster(x2)

plot(myfit2)
plot(myfit2, 55)

assign_cluster(myfit2, k = 55)

## Example from StackOverflow Question Response
## Asking fo grouping similar texts together
## http://stackoverflow.com/q/22936951/1000343
dat <- data.frame(
    person = LETTERS[1:3],
    text = c("Best way to waste money",
    "Amazing stuff. lets you stay connected all the time",
    "Instrument to waste money and time"),
    stringsAsFactors = FALSE
)


x <- with(
    dat,
    data_store(text, person)
)


hierarchical_cluster(x) \%>\%
    plot(h=.9, lwd=2)

hierarchical_cluster(x) \%>\%
    assign_cluster(h=.9)


hierarchical_cluster(x) \%>\%
    assign_cluster(h=.9) \%>\%
    get_terms()

hierarchical_cluster(x) \%>\%
    assign_cluster(h=.9) \%>\%
    get_terms() \%>\%
    as_topic()

hierarchical_cluster(x) \%>\%
    assign_cluster(h=.9) \%>\%
    get_documents()
}

